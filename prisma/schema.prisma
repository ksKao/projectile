// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model Projects {
    id                String          @id @default(uuid())
    name              String
    members           String[]
    leader            String
    password          String
    description       String
    thumbnailFileName String
    kanbanColumns     KanbanColumns[]
    threads           Threads[]
    files             Files[]
    polls             Polls[]
    dueDate           DateTime
    createdAt         DateTime        @default(now())
    updatedAt         DateTime        @updatedAt
}

model KanbanColumns {
    id        String   @id @default(uuid())
    project   Projects @relation(fields: [projectId], references: [id])
    projectId String
    tasks     Tasks[]
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Tasks {
    kanbanColumn    KanbanColumns @relation(fields: [kanbanColumnId], references: [id])
    kanbanColumnId  String
    sortOrder       Int
    title           String
    description     String
    assignedMembers String[]
    dueDate         DateTime
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @updatedAt

    @@id([kanbanColumnId, sortOrder])
}

model Threads {
    id        String          @id @default(uuid())
    title     String
    content   String
    replies   ThreadReplies[]
    createdAt DateTime        @default(now())
    updatedAt DateTime        @updatedAt
    project   Projects        @relation(fields: [projectId], references: [id])
    projectId String
}

model ThreadReplies {
    id        String   @id @default(uuid())
    content   String
    author    String
    thread    Threads  @relation(fields: [threadId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    threadId  String
}

model Files {
    id         String   @id @default(uuid())
    project    Projects @relation(fields: [projectId], references: [id])
    projectId  String
    fileName   String
    uploadedBy String
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

model Polls {
    id        String        @id @default(uuid())
    project   Projects      @relation(fields: [projectId], references: [id])
    projectId String
    options   PollOptions[]
    dueDate   DateTime
    createdAt DateTime      @default(now())
    updatedAt DateTime      @updatedAt
}

model PollOptions {
    id      String  @id @default(uuid())
    title   String
    Polls   Polls   @relation(fields: [pollsId], references: [id])
    pollsId String
    votes   Votes[]
}

model Votes {
    userId        String
    option        PollOptions @relation(fields: [pollOptionsId], references: [id])
    pollOptionsId String

    @@id([userId, pollOptionsId])
}
